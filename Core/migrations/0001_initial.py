# Generated by Django 5.2.3 on 2025-06-12 22:36

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('logo', models.ImageField(blank=True, null=True, upload_to='site/')),
                ('favicon', models.ImageField(blank=True, null=True, upload_to='site/')),
                ('footer_text', models.TextField()),
                ('copyright_text', models.CharField(max_length=200)),
                ('show_footer', models.BooleanField(default=True)),
                ('facebook_url', models.URLField()),
                ('twitter_url', models.URLField()),
                ('instagram_url', models.URLField()),
                ('linkedin_url', models.URLField()),
                ('youtube_url', models.URLField()),
                ('telegram_url', models.URLField()),
                ('show_email_in_header', models.BooleanField(default=True)),
                ('show_phone_in_header', models.BooleanField(default=True)),
                ('show_address_in_footer', models.BooleanField(default=True)),
                ('enable_dark_mode', models.BooleanField(default=False)),
                ('primary_color', models.CharField(default='#2c3e50', max_length=7)),
                ('secondary_color', models.CharField(default='#34495e', max_length=7)),
                ('maintenance_mode', models.BooleanField(default=False)),
                ('maintenance_message', models.TextField()),
                ('allow_registration', models.BooleanField(default=True)),
                ('auto_approve_users', models.BooleanField(default=False)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
                ('contact_address', models.TextField()),
                ('meta_keywords', models.CharField(max_length=200)),
                ('meta_description', models.TextField()),
                ('google_analytics_id', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Site Settings',
                'verbose_name_plural': 'Site Settings',
                'db_table': 'Core_sitesettings',
            },
        ),
        migrations.CreateModel(
            name='CasinoUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.TextField(unique=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('failed_login_attempts', models.IntegerField(default=0)),
                ('last_failed_login', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='casino_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('can_approve_user', 'Can approve casino users'), ('can_view_user_details', 'Can view user details'), ('can_manage_user', 'Can manage casino users')],
            },
        ),
        migrations.CreateModel(
            name='GameCards',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(db_index=True, default=False)),
                ('image', models.ImageField(upload_to='cards_images')),
                ('title', models.CharField(db_index=True, max_length=20)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('redirect_link', models.URLField(blank=True)),
                ('approved_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_cards', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_cards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Game Card',
                'verbose_name_plural': 'Game Cards',
                'ordering': ['-created_at'],
                'permissions': [('can_approve_card', 'Can approve game cards'), ('can_manage_cards', 'Can manage game cards'), ('can_view_card_stats', 'Can view card statistics')],
            },
        ),
        migrations.CreateModel(
            name='CardClick',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('click_date', models.DateField(auto_now_add=True, db_index=True)),
                ('click_time', models.TimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, db_index=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('referrer', models.URLField(blank=True, null=True)),
                ('session_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='card_clicks', to=settings.AUTH_USER_MODEL)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clicks', to='Core.gamecards')),
            ],
            options={
                'verbose_name': 'Card Click',
                'verbose_name_plural': 'Card Clicks',
                'permissions': [('can_view_clicks', 'Can view card clicks'), ('can_export_clicks', 'Can export card clicks')],
            },
        ),
        migrations.CreateModel(
            name='PageVisit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_url', models.CharField(db_index=True, max_length=255)),
                ('visit_date', models.DateField(auto_now_add=True, db_index=True)),
                ('visit_time', models.TimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, db_index=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('referrer', models.URLField(blank=True, null=True)),
                ('is_unique', models.BooleanField(db_index=True, default=True)),
                ('session_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Page Visit',
                'verbose_name_plural': 'Page Visits',
                'permissions': [('can_view_analytics', 'Can view page analytics'), ('can_export_analytics', 'Can export page analytics')],
                'indexes': [models.Index(fields=['visit_date', 'page_url'], name='Core_pagevi_visit_d_584e27_idx'), models.Index(fields=['ip_address', 'visit_date'], name='Core_pagevi_ip_addr_7d8765_idx'), models.Index(fields=['session_id', 'visit_date'], name='Core_pagevi_session_51c282_idx')],
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('level', models.CharField(choices=[('INFO', 'Information'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('SUCCESS', 'Success')], db_index=True, default='INFO', max_length=10)),
                ('action', models.CharField(choices=[('LOGIN', 'User Login'), ('LOGOUT', 'User Logout'), ('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete'), ('APPROVE', 'Approve'), ('REJECT', 'Reject'), ('SETTINGS', 'Settings Change'), ('SYSTEM', 'System Event')], db_index=True, max_length=10)),
                ('ip_address', models.GenericIPAddressField(blank=True, db_index=True, null=True)),
                ('message', models.TextField()),
                ('details', models.JSONField(blank=True, null=True)),
                ('affected_model', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('affected_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Log',
                'verbose_name_plural': 'System Logs',
                'ordering': ['-timestamp'],
                'permissions': [('can_view_logs', 'Can view system logs'), ('can_export_logs', 'Can export system logs'), ('can_manage_logs', 'Can manage system logs')],
            },
        ),
        migrations.CreateModel(
            name='SystemNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=100)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('error', 'Error'), ('success', 'Success')], db_index=True, default='info', max_length=20)),
                ('is_read', models.BooleanField(db_index=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('expires_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('for_all_admins', models.BooleanField(db_index=True, default=True)),
                ('target_admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Notification',
                'verbose_name_plural': 'System Notifications',
                'ordering': ['-created_at'],
                'permissions': [('can_manage_notifications', 'Can manage system notifications'), ('can_view_notifications', 'Can view system notifications')],
            },
        ),
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(db_index=True, default='About Us', max_length=200)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(db_index=True, default=False)),
                ('published_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_about_sections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'About Section',
                'verbose_name_plural': 'About Sections',
                'permissions': [('can_publish_about', 'Can publish about sections'), ('can_manage_about', 'Can manage about sections')],
                'indexes': [models.Index(fields=['is_published', 'published_at'], name='Core_about_is_publ_fbe82e_idx'), models.Index(fields=['created_by', 'created_at'], name='Core_about_created_37d6b1_idx')],
            },
        ),
        migrations.CreateModel(
            name='AdminActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('approve', 'Approve'), ('other', 'Other')], db_index=True, max_length=20)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, db_index=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('related_model', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('object_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Admin Activity',
                'verbose_name_plural': 'Admin Activities',
                'ordering': ['-timestamp'],
                'permissions': [('can_view_activity', 'Can view admin activity'), ('can_export_activity', 'Can export admin activity')],
                'indexes': [models.Index(fields=['user', 'activity_type', 'timestamp'], name='Core_admina_user_id_5c7a7b_idx'), models.Index(fields=['related_model', 'object_id'], name='Core_admina_related_c6428d_idx'), models.Index(fields=['ip_address', 'timestamp'], name='Core_admina_ip_addr_39c1ca_idx')],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(db_index=True, max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('content', models.TextField()),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='blog_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(db_index=True, default=False)),
                ('published_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('is_featured', models.BooleanField(db_index=True, default=False)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('meta_keywords', models.CharField(blank=True, max_length=200)),
                ('view_count', models.PositiveIntegerField(db_index=True, default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Blog Post',
                'verbose_name_plural': 'Blog Posts',
                'ordering': ['-created_at'],
                'permissions': [('can_publish_post', 'Can publish blog posts'), ('can_feature_post', 'Can feature blog posts'), ('can_manage_posts', 'Can manage blog posts')],
                'indexes': [models.Index(fields=['published', 'published_at'], name='Core_blogpo_publish_520b4e_idx'), models.Index(fields=['author', 'created_at'], name='Core_blogpo_author__4c3fa3_idx'), models.Index(fields=['is_featured', 'published'], name='Core_blogpo_is_feat_61324e_idx'), models.Index(fields=['view_count', 'published'], name='Core_blogpo_view_co_b92018_idx')],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(db_index=True, max_length=254)),
                ('phone', models.CharField(db_index=True, max_length=20)),
                ('address', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_contacts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contact Info',
                'permissions': [('can_manage_contact', 'Can manage contact information')],
                'indexes': [models.Index(fields=['is_active', 'created_at'], name='Core_contac_is_acti_566249_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='gamecards',
            index=models.Index(fields=['active', 'approved_at'], name='Core_gameca_active_5895ed_idx'),
        ),
        migrations.AddIndex(
            model_name='gamecards',
            index=models.Index(fields=['created_by', 'created_at'], name='Core_gameca_created_0b70e9_idx'),
        ),
        migrations.AddIndex(
            model_name='gamecards',
            index=models.Index(fields=['approved_by', 'approved_at'], name='Core_gameca_approve_2154ad_idx'),
        ),
        migrations.AddIndex(
            model_name='cardclick',
            index=models.Index(fields=['click_date', 'card'], name='Core_cardcl_click_d_c72dd9_idx'),
        ),
        migrations.AddIndex(
            model_name='cardclick',
            index=models.Index(fields=['user', 'click_date'], name='Core_cardcl_user_id_1142da_idx'),
        ),
        migrations.AddIndex(
            model_name='cardclick',
            index=models.Index(fields=['ip_address', 'click_date'], name='Core_cardcl_ip_addr_7de94c_idx'),
        ),
        migrations.AddIndex(
            model_name='cardclick',
            index=models.Index(fields=['session_id', 'click_date'], name='Core_cardcl_session_31b579_idx'),
        ),
        migrations.AddIndex(
            model_name='systemlog',
            index=models.Index(fields=['level', 'action', 'timestamp'], name='Core_system_level_cf1fde_idx'),
        ),
        migrations.AddIndex(
            model_name='systemlog',
            index=models.Index(fields=['user', 'timestamp'], name='Core_system_user_id_7c9ac2_idx'),
        ),
        migrations.AddIndex(
            model_name='systemlog',
            index=models.Index(fields=['affected_model', 'affected_id'], name='Core_system_affecte_5e8e5c_idx'),
        ),
        migrations.AddIndex(
            model_name='systemlog',
            index=models.Index(fields=['ip_address', 'timestamp'], name='Core_system_ip_addr_4fc245_idx'),
        ),
        migrations.AddIndex(
            model_name='systemnotification',
            index=models.Index(fields=['notification_type', 'is_read'], name='Core_system_notific_aedc56_idx'),
        ),
        migrations.AddIndex(
            model_name='systemnotification',
            index=models.Index(fields=['for_all_admins', 'created_at'], name='Core_system_for_all_3973e3_idx'),
        ),
        migrations.AddIndex(
            model_name='systemnotification',
            index=models.Index(fields=['target_admin', 'is_read'], name='Core_system_target__794f11_idx'),
        ),
        migrations.AddIndex(
            model_name='systemnotification',
            index=models.Index(fields=['expires_at', 'is_read'], name='Core_system_expires_449c68_idx'),
        ),
    ]
